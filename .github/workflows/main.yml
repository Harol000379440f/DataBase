name: Construir, Escanear y Publicar Imagen Docker #Name WorkFlow

on: #Trigger/Evento
  push:
    branches:
      - main

jobs:  #Jobs
  construir_escanear_publicar:
    runs-on: ubuntu-latest #Runner
    steps:   #Step
      - name: Clonar Código
        uses: actions/checkout@v3

      - name: Iniciar sesión en Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Construir Imagen Docker
        run: |
          echo "Comenzando la construcción de la imagen Docker..."
          DOCKER_USERNAME=$(echo "${{ secrets.DOCKER_USERNAME }}" | tr '[:upper:]' '[:lower:]')
          echo "Utilizando nombre de usuario de Docker: $DOCKER_USERNAME"
          IMAGE_NAME="$DOCKER_USERNAME/dockerfile-postgres:latest"
          echo "Construyendo la imagen con el nombre: $IMAGE_NAME"
          docker build -t $IMAGE_NAME .
          echo "Construcción de la imagen Docker completada."
          echo "Listando imágenes Docker disponibles..."
          docker images

      - name: Escanear Imagen Docker con Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKER_USERNAME }}/dockerfile-postgres:latest
          severity: CRITICAL,HIGH
          ignore-unfixed: true
          exit-code: 0

      - name: Publicar Imagen Docker
        if: success()
        run: |
          echo "Comenzando la publicación de la imagen Docker..."
          DOCKER_USERNAME=$(echo "${{ secrets.DOCKER_USERNAME }}" | tr '[:upper:]' '[:lower:]')
          IMAGE_NAME="$DOCKER_USERNAME/dockerfile-postgres:latest"
          docker push $IMAGE_NAME
          echo "Publicación de la imagen Docker completada."

      - name: Pruebas Unitarias del Pipeline Docker
        if: success()
        run: |
          echo "Ejecutando pruebas del pipeline..."
          # Agrega aquí tus pruebas unitarias